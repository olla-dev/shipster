version: '3'

services:
  staging-db:
    restart: always
    container_name: staging-db
    image: "postgis/postgis:${POSTGRES_VERSION}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    expose:
      - ${POSTGRES_DOCKER_PORT}
    volumes:
      - postgres_data:/var/lib/postgres/data/
    networks:
      - web

  staging-app:
    container_name: staging-app
    build:
      context: .
      dockerfile: ./backend/Dockerfile.backend
      args:
        - DEV=false
    ports:
      - ${DJANGO_DOCKER_PORT}:8000
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 /app/manage.py migrate --noinput && gunicorn app.wsgi -b 0.0.0.0:8000"
    depends_on:
      - staging-db
    links:
      - staging-db:db
    networks:
      - web

  staging-frontend:
    restart: always
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.ui
    container_name: staging-frontend
    image: frontend_image
    depends_on:
      - staging-app
      - staging-db
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
    ports:
      - ${FRONTEND_DOCKER_PORT}:80
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.staging-frontend.entrypoints=web,websecure"
      - "traefik.http.routers.staging-frontend.rule=Host(`${STAGING_DOMAIN}`)"
      - "traefik.http.services.staging-frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.staging-frontend.tls=true"
      - "traefik.http.routers.staging-frontend.tls.certresolver=leresolver"
    networks:
      - web
      - traefik_network

  staging-pgadmin:
    container_name: staging-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "9050:80"
    depends_on:
      - staging-db
    restart: always
    networks:
      - web

  staging-pgbackups:
    container_name: staging-pgbackups
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./pgbackups:/backups
    links:
      - staging-db
    depends_on:
      - staging-db
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
    networks:
      - web

volumes:
   postgres_data:

networks:
  web:
  traefik_network:
    external: true
